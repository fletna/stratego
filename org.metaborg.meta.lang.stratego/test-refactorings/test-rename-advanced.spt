module test-rename-advanced
 
language Stratego-Sugar

/**
 * Advanced rename testcases: dynamic rules, lambda rules, scoped rules 
 * errors do not occur
 */
setup [[
  module test-rename-advanced
  rules
]]

test Rename S-Rule
  [[ 
      bar(|x) = map((([[x]],y,z) -> (x,y))) 
  ]] refactor rename-refactoring("foo") to 
  [[
      bar(|foo) = map(((foo,y,z) -> (foo,y))) 
  ]]

test Rename Scoped Rule (1)
  [[ 
      bar(|x) = map({[[x]]: ((x,y,z) -> (x,y))}) 
  ]] refactor rename-refactoring("foo") to 
  [[
      bar(|x) = map({foo: ((foo,y,z) -> (foo,y))}) 
  ]]

test Rename Scoped Rule (2)
  [[ 
      bar(|x) = map({y: (([[x]],y,z) -> (x,y))}) 
  ]] refactor rename-refactoring("foo") to 
  [[
      bar(|foo) = map({y: ((foo,y,z) -> (foo,y))}) 
  ]]

test Rename Lambda-Rule (1)
  [[ 
      bar(|x) = map(\(x,y,z) -> ([[x]],y)\) 
  ]] refactor rename-refactoring("foo") to 
  [[
      bar(|x) = map(\(foo,y,z) -> (foo,y)\) 
  ]]

test Rename Lambda-Rule (2)
  [[ 
      bar(|x) = map(\([[x]],y,z) -> (x,y)\) 
  ]] refactor rename-refactoring("foo") to 
  [[
      bar(|x) = map(\(foo,y,z) -> (foo,y)\) 
  ]]

test Rename Dynamic-Rule
  [[ 
  	rename: x -> x{<[[Declare]]> x}
  	declare-name = 
  	  ?(name, ref);
      rules(Declare: name -> ref)
  ]] refactor rename-refactoring("Rename") to 
  [[
  	rename: x -> x{<Rename> x}
  	declare-name = 
  	  ?(name, ref);
      rules(Rename: name -> ref)
  ]]

test Rename Dynamic-Rule Scope
  [[ 
  	rename: x -> x{<[[Declare]]> x}
  	declare-name = 
  	  ?(name, ref);
  	  {|Declare:
         rules(Declare: name -> ref)
      |}
  ]] refactor rename-refactoring("Rename") to 
  [[
  	rename: x -> x{<Rename> x}
  	declare-name = 
  	  ?(name, ref);
  	  {|Rename:
        rules(Rename: name -> ref)
      |}
  ]]

test Rename Dynamic-Rule Bagof (1)
  [[ 
  	rename: x -> x{<bagof-Declare> x}
  	declare-name = 
  	  ?(name, ref);
      rules([[Declare]]: name -> ref)
  ]] refactor rename-refactoring("Rename") to 
  [[
  	rename: x -> x{<bagof-Rename> x}
  	declare-name = 
  	  ?(name, ref);
      rules(Rename: name -> ref)
  ]]

test Rename Dynamic-Rule Bagof (2)
  [[ 
  	rename: x -> x{<[[bagof-Declare]]> x}
  	declare-name = 
  	  ?(name, ref);
      rules(Declare: name -> ref)
  ]] refactor rename-refactoring("Rename") to 
  [[
  	rename: x -> x{<bagof-Rename> x}
  	declare-name = 
  	  ?(name, ref);
      rules(Rename: name -> ref)
  ]]


