module test-remove-debug
 
language Stratego-Sugar

/**
 * Testcases Remove Debug
*/

setup [[
  module test-remove-debug
  rules
    aaa = fail
    bbb = fail
    ccc = fail
]]

test Remove Debug Seq (1)
  [[ 
      bar(x) = debug; map(x)
  ]] refactor remove-debug-refactoring to
  [[ 
      bar(x) = map(x)
  ]] 
 
test Remove Debug Seq (2)
  [[ 
      bar(x) = map(x); debug
  ]] refactor remove-debug-refactoring to
  [[ 
      bar(x) = map(x)
  ]] 

test Remove Debug Seq (3)
  [[ 
      bar(x) = debug; map(x); debug(!"1: "); debug
  ]] refactor remove-debug-refactoring to
  [[ 
      bar(x) = map(x)
  ]] 

test Remove Debug GuardedLChoice (1)
  [[ 
      bar(x) = debug < aaa + bbb
  ]] refactor remove-debug-refactoring to
  [[ 
      bar(x) = aaa
  ]] 

test Remove Debug GuardedLChoice (2)
  [[ 
      bar(x) = aaa < debug + bbb
  ]] refactor remove-debug-refactoring to
  [[ 
      bar(x) = aaa <+ bbb
  ]] 

test Remove Debug GuardedLChoice (3)
  [[ 
      bar(x) = aaa < bbb + debug
  ]] refactor remove-debug-refactoring to
  [[ 
      bar(x) = aaa < bbb + id
  ]] 

test Remove Debug GuardedLChoice (IfThen)
  [[ 
      bar(x) = where(aaa) < bbb + debug
  ]] refactor remove-debug-refactoring to
  [[ 
      bar(x) = if aaa then bbb end
  ]] 

test Remove Debug Rule (rhs)
  [[ 
      bar: a -> <debug> (a,a)
  ]] refactor remove-debug-refactoring to
  [[ 
      bar: a -> (a,a)
  ]] 

test Remove Debug Rule (single condition)
  [[ 
      bar: a -> (a,a)
      where
        debug
  ]] refactor remove-debug-refactoring to
  [[ 
      bar: a -> (a,a)
  ]] 

test Remove Debug Rule (conditions)
  [[ 
      bar: a -> (a,a)
      where
        debug;
        aaa
      where
        bbb
      with
        debug
  ]] refactor remove-debug-refactoring to
  [[ 
      bar: a -> (a,a)
      where
        aaa
      where
        bbb
  ]] 

test Remove Debug Appl in Where
  [[ 
      bar =
      	?(x,y);
        where (<debug> x) 
  ]] refactor remove-debug-refactoring to
  [[ 
      bar =
      	?(x,y)
  ]] 

test Remove Debug Appl in With
  [[ 
      bar =
      	?(x,y);
        with (<debug> x) 
  ]] refactor remove-debug-refactoring to
  [[ 
      bar =
      	?(x,y)
  ]] 

