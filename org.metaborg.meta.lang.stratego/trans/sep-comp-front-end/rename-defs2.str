module sep-comp-front-end/rename-defs2

imports libstrc
imports libspoofax/term/annotation

signature constructors

  LocalArg : Anno

strategies

  // Rename the names of all top-level strategy definitions; 
  // The Stratego syntax cannot be used for names of Java classes.

  rename-calls2 =
    topdown(try(RenameCall2))

rules

  RenameSDef2 :
    AnnoDef(a*, 'def) -> AnnoDef(a*, <RenameSDef2> 'def)

  RenameSDef2 : 
    SDefT(x, args1, args2, s) -> SDefT(x, args1, args2, s')
    where <length> args1 => n
        ; <length> args2 => m
        ; s' := <annotate-local-args(|<map(?VarDec(<id>,_))> args1)> s

  RenameSDef2 : 
    ExtSDefInl(x, args1, args2, s) -> ExtSDefInl(x, args1, args2, s')
    where <length> args1 => n
        ; <length> args2 => m
        ; s' := <annotate-local-args(|<map(?VarDec(<id>,_))> args1)> s

  RenameCall2 : 
    CallT(SVar(x), ss, ts) -> CallT(SVar(y), ss, ts)
    where id
      ; <get-annotation(?LocalArg())> x
      ; y := <remove-annotations(?LocalArg())> x

  RenameCall2 : 
    CallT(SVar(x), ss, ts) -> CallT(SVar(y), ss, ts)
    where id
      ; not(<get-annotation(?LocalArg())> x)
      ; <length> ss => n
      ; <length> ts => m
      ; <rename-var-manual>(x, (n,m)) => y


  rename-var-manual:
    (x,(n,m)) -> <concat-strings>[<cify> x, "_", <int-to-string> n, "_", <int-to-string> m]

  annotate-local-args(|larg*) = alltd(annotate-local-arg(|larg*))

  annotate-local-arg(|larg*): Let(sdeft*, body) -> Let(sdeft*, body')
  with id
    ; def* := <map(?SDefT(<id>, _, _, _))> sdeft*
    ; body' := <annotate-local-args(|[larg*, def*])> body

  annotate-local-arg(|larg*): CallT(SVar(x), ss, ts) -> CallT(SVar(y), ss, ts)
  where id
    ; <getfirst(?x)> larg*
    ; y := <add-annotation(|LocalArg())> x
