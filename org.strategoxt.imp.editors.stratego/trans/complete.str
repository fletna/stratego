module complete

imports
  analysis
  libstrc
  lib/editor-common.generated


strategies
  
  editor-complete:
    (Var(COMPLETION(_)), position, ast, path, project-path) -> proposals
    with
      <analyze-ast-local> ast;
      proposals := <ContentProposals>
      
  editor-complete:
    (SVar(COMPLETION(_)), position, ast, path, project-path) -> proposals
    with
      <analyze-ast-local> ast;
      proposals := <ContentProposals>

  editor-complete:
    (SVar(COMPLETION(_)), position, ast, path, project-path) -> proposals
    with
      <analyze-ast-local> ast;
      proposals := <ContentProposals>

  editor-complete:
    (Import(COMPLETION(_)), position, ast, path, project-path) -> proposals
    where
      debug(!"Import: ");
      proposals := <imported-module-name-proposals> ast

  editor-complete:
    (Module(COMPLETION(_), _), position, ast, path, project-path) -> proposals
    where
      proposals := <new-module-name-proposals> path

  editor-complete:
    (SortVar(COMPLETION(_)), position, ast, path, project-path) -> proposals
    where
      proposals := [] //TODO

  editor-complete:
    (RDecT(COMPLETION(_), _, _), position, ast, path, project-path) -> proposals
    where
      proposals := [] //TODO


rules //helpers

   imported-module-name-proposals:
    ast -> proposals'
    where
      proposals := <all-keys-ModuleName>;
      excluded-proposals :=
        [<?Module(<id>,_)> ast | <collect-all(?Import(<id>))> ast];
      proposals':= <diff> (proposals, excluded-proposals)

  new-module-name-proposals:
    path -> proposals
    where
      proposals := [
        <base-filename; remove-extension> path,
        <remove-extension> path
      ]
