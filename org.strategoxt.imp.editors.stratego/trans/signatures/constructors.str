module signatures/constructors


imports 
	signatures/project
	solver/constraints


signature
	constructors
		/* built-in primitive Sorts + Types */
		// Term: Sort
		ATerm: Sort
		Int: Sort
		Double: Sort
		String: Sort
		List: a -> Sort
		List: Sort
		// Option: a -> Sort
		// Option: Sort
		// Tuple : List(Sort) -> Sort
			
signature
	constructors // helpers
		Var: String -> Var
				
signature
	constructors

		ConstSig: String * List(Sort) * Sort * ConstraintSet * String -> ConstSig


rules // accessors for Signatures
	
	sort-any = !ATerm()
	
	is-sort-any = ?ATerm()
	
	signature-constructor:
		ConstSig(c,_,_,_,_) -> c
	
	signature-arguments:
		ConstSig(_,a,_,_,_) -> a

	signature-sort:
		ConstSig(_,args,s#(_),_,_) -> s#(args)
	
	signature-freevars:
		ConstSig(_,_,_,v,_) -> v
	
	is-freevar(|var-name):
		ConstSig(_,_,_,configurations,_) -> <constraint-contains-var(|var-name)> configurations
			
