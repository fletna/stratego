module pp/nabl2/shared/constraints/Properties-pp

imports
  libstratego-gpp
  libspoofax/sdf/pp
  libspoofax/term/origin
  libstratego-sglr
  signatures/nabl2/shared/constraints/Properties-sig


imports
  signatures/nabl2/shared/common/AST-sig
  signatures/nabl2/shared/common/Identifiers-sig
  signatures/nabl2/shared/common/Messages-sig
  signatures/nabl2/shared/common/ScopeGraph-sig
  signatures/nabl2/shared/constraints/Base-sig
  signatures/nabl2/shared/constraints/Equality-sig


imports
  pp/nabl2/shared/common/AST-pp
  pp/nabl2/shared/common/Identifiers-pp
  pp/nabl2/shared/common/Messages-pp
  pp/nabl2/shared/common/ScopeGraph-pp
  pp/nabl2/shared/constraints/Base-pp
  pp/nabl2/shared/constraints/Equality-pp


strategies
  prettyprint-example =
    prettyprint-NaBL2

  prettyprint-NaBL2 =
    fail

  prettyprint-NaBL2(|sort) =
    fail


strategies
  prettyprint-SDF-start-symbols =
    prettyprint-NaBL2-start-symbols

  prettyprint-NaBL2-start-symbols =
    fail


strategies
  prettyprint-NaBL2 =
    prettyprint-NaBL2-NaBL2-Constraint

  prettyprint-NaBL2 =
    prettyprint-NaBL2-NaBL2-DeclProperty

  prettyprint-NaBL2(|sort):
    t -> <prettyprint-NaBL2-NaBL2-Constraint>
    where <?"NaBL2-Constraint"> sort

  prettyprint-NaBL2(|sort):
    t -> <prettyprint-NaBL2-NaBL2-DeclProperty>
    where <?"NaBL2-DeclProperty"> sort

  prettyprint-NaBL2-NaBL2-Constraint :
    CDeclProperty(t1__, t2__, t3__, t4__, t5__) -> [ H(
                                                       [SOpt(HS(), "0")]
                                                     , [ t1__'
                                                       , S(".")
                                                       , t2__'
                                                       , S(" := ")
                                                       , t3__'
                                                       , S(" ")
                                                       , t4__'
                                                       , S(" ")
                                                       , t5__'
                                                       ]
                                                     )
                                                   ]
    with t1__' := <pp-one-Z(prettyprint-NaBL2-NaBL2-Occurrence) <+ pp-one-Z(prettyprint-completion-aux)> t1__
    with t2__' := <pp-one-Z(prettyprint-NaBL2-NaBL2-DeclProperty) <+ pp-one-Z(prettyprint-completion-aux)> t2__
    with t3__' := <pp-one-Z(prettyprint-NaBL2-NaBL2-CTerm) <+ pp-one-Z(prettyprint-completion-aux)> t3__
    with t4__' := <pp-one-Z(prettyprint-NaBL2-NaBL2-ConstraintPriority) <+ pp-one-Z(prettyprint-completion-aux)> t4__
    with t5__' := <pp-one-Z(prettyprint-NaBL2-NaBL2-Message) <+ pp-one-Z(prettyprint-completion-aux)> t5__

  is-NaBL2-NaBL2-Constraint =
    ?CDeclProperty(_, _, _, _, _)

  NaBL2-get-indent :
    ( t@CDeclProperty(t1__, t2__, t3__, t4__, t5__)
    , index
    ) -> indent
    where sort := <ia-get-sort> t
          ; <?"NaBL2-Constraint"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           case ?3 :
             indent := ""
           case ?4 :
             indent := ""
           case ?5 :
             indent := ""
           otherwise :
             indent := ""
         end

  NaBL2-get-separator :
    ( t@CDeclProperty(t1__, t2__, t3__, t4__, t5__)
    , index
    ) -> separator
    where sort := <ia-get-sort> t
          ; <?"NaBL2-Constraint"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           case ?3 :
             separator := ""
           case ?4 :
             separator := ""
           case ?5 :
             separator := ""
           otherwise :
             separator := ""
         end

  NaBL2-get-leading-ws :
    ( t@CDeclProperty(t1__, t2__, t3__, t4__, t5__)
    , index
    ) -> ws
    where sort := <ia-get-sort> t
          ; <?"NaBL2-Constraint"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := ""
           case ?3 :
             ws := " "
           case ?4 :
             ws := " "
           case ?5 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-NaBL2-NaBL2-DeclProperty :
    Property(t1__) -> [ H(
                          [SOpt(HS(), "0")]
                        , [t1__']
                        )
                      ]
    with t1__' := <pp-one-Z(prettyprint-NaBL2-NaBL2-DeclPropertyId) <+ pp-one-Z(prettyprint-completion-aux)> t1__

  is-NaBL2-NaBL2-DeclProperty =
    ?Property(_)

  NaBL2-get-indent :
    (t@Property(t1__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"NaBL2-DeclProperty"> sort
    with switch !index
           case ?1 :
             indent := ""
           otherwise :
             indent := ""
         end

  NaBL2-get-separator :
    (t@Property(t1__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"NaBL2-DeclProperty"> sort
    with switch !index
           case ?1 :
             separator := ""
           otherwise :
             separator := ""
         end

  NaBL2-get-leading-ws :
    (t@Property(t1__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"NaBL2-DeclProperty"> sort
    with switch !index
           case ?1 :
             ws := ""
           otherwise :
             ws := ""
         end

  prettyprint-NaBL2-NaBL2-DeclProperty :
    Type() -> [ H(
                  [SOpt(HS(), "0")]
                , [S("type")]
                )
              ]

  is-NaBL2-NaBL2-DeclProperty =
    ?Type()

  NaBL2-get-indent :
    (t@Type(), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"NaBL2-DeclProperty"> sort
    with switch !index
           otherwise :
             indent := ""
         end

  NaBL2-get-separator :
    (t@Type(), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"NaBL2-DeclProperty"> sort
    with switch !index
           otherwise :
             separator := ""
         end

  NaBL2-get-leading-ws :
    (t@Type(), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"NaBL2-DeclProperty"> sort
    with switch !index
           otherwise :
             ws := ""
         end

  is-NaBL2-NaBL2-Constraint =
    fail

  is-NaBL2-NaBL2-DeclProperty =
    fail

  prettyprint-NaBL2-NaBL2-Constraint :
    amb([h|hs]) -> <prettyprint-NaBL2-NaBL2-Constraint> h

  prettyprint-NaBL2-NaBL2-DeclProperty :
    amb([h|hs]) -> <prettyprint-NaBL2-NaBL2-DeclProperty> h

  prettyprint-NaBL2-NaBL2-Constraint :
    NaBL2-Constraint-Plhdr() -> [ H(
                                    [SOpt(HS(), "0")]
                                  , [S("$NaBL2-Constraint")]
                                  )
                                ]

  is-NaBL2-NaBL2-Constraint =
    ?NaBL2-Constraint-Plhdr()

  prettyprint-NaBL2-NaBL2-Occurrence :
    NaBL2-Occurrence-Plhdr() -> [ H(
                                    [SOpt(HS(), "0")]
                                  , [S("$NaBL2-Occurrence")]
                                  )
                                ]

  is-NaBL2-NaBL2-Occurrence =
    ?NaBL2-Occurrence-Plhdr()

  prettyprint-NaBL2-NaBL2-CTerm :
    NaBL2-CTerm-Plhdr() -> [ H(
                               [SOpt(HS(), "0")]
                             , [S("$NaBL2-CTerm")]
                             )
                           ]

  is-NaBL2-NaBL2-CTerm =
    ?NaBL2-CTerm-Plhdr()

  prettyprint-NaBL2-NaBL2-ConstraintPriority :
    NaBL2-ConstraintPriority-Plhdr() -> [ H(
                                            [SOpt(HS(), "0")]
                                          , [S("$NaBL2-ConstraintPriority")]
                                          )
                                        ]

  is-NaBL2-NaBL2-ConstraintPriority =
    ?NaBL2-ConstraintPriority-Plhdr()

  prettyprint-NaBL2-NaBL2-Message :
    NaBL2-Message-Plhdr() -> [ H(
                                 [SOpt(HS(), "0")]
                               , [S("$NaBL2-Message")]
                               )
                             ]

  is-NaBL2-NaBL2-Message =
    ?NaBL2-Message-Plhdr()

  prettyprint-NaBL2-NaBL2-DeclPropertyId :
    NaBL2-DeclPropertyId-Plhdr() -> [ H(
                                        [SOpt(HS(), "0")]
                                      , [S("$NaBL2-DeclPropertyId")]
                                      )
                                    ]

  is-NaBL2-NaBL2-DeclPropertyId =
    ?NaBL2-DeclPropertyId-Plhdr()

  prettyprint-NaBL2-NaBL2-DeclProperty :
    NaBL2-DeclProperty-Plhdr() -> [ H(
                                      [SOpt(HS(), "0")]
                                    , [S("$NaBL2-DeclProperty")]
                                    )
                                  ]

  is-NaBL2-NaBL2-DeclProperty =
    ?NaBL2-DeclProperty-Plhdr()

  prettyprint-NaBL2-NaBL2-Constraint :
    NaBL2-Constraint-Plhdr(_) -> [ H(
                                     [SOpt(HS(), "0")]
                                   , [S("$NaBL2-Constraint")]
                                   )
                                 ]

  is-NaBL2-NaBL2-Constraint =
    ?NaBL2-Constraint-Plhdr(_)

  prettyprint-NaBL2-NaBL2-Occurrence :
    NaBL2-Occurrence-Plhdr(_) -> [ H(
                                     [SOpt(HS(), "0")]
                                   , [S("$NaBL2-Occurrence")]
                                   )
                                 ]

  is-NaBL2-NaBL2-Occurrence =
    ?NaBL2-Occurrence-Plhdr(_)

  prettyprint-NaBL2-NaBL2-CTerm :
    NaBL2-CTerm-Plhdr(_) -> [ H(
                                [SOpt(HS(), "0")]
                              , [S("$NaBL2-CTerm")]
                              )
                            ]

  is-NaBL2-NaBL2-CTerm =
    ?NaBL2-CTerm-Plhdr(_)

  prettyprint-NaBL2-NaBL2-ConstraintPriority :
    NaBL2-ConstraintPriority-Plhdr(_) -> [ H(
                                             [SOpt(HS(), "0")]
                                           , [S("$NaBL2-ConstraintPriority")]
                                           )
                                         ]

  is-NaBL2-NaBL2-ConstraintPriority =
    ?NaBL2-ConstraintPriority-Plhdr(_)

  prettyprint-NaBL2-NaBL2-Message :
    NaBL2-Message-Plhdr(_) -> [ H(
                                  [SOpt(HS(), "0")]
                                , [S("$NaBL2-Message")]
                                )
                              ]

  is-NaBL2-NaBL2-Message =
    ?NaBL2-Message-Plhdr(_)

  prettyprint-NaBL2-NaBL2-DeclPropertyId :
    NaBL2-DeclPropertyId-Plhdr(_) -> [ H(
                                         [SOpt(HS(), "0")]
                                       , [S("$NaBL2-DeclPropertyId")]
                                       )
                                     ]

  is-NaBL2-NaBL2-DeclPropertyId =
    ?NaBL2-DeclPropertyId-Plhdr(_)

  prettyprint-NaBL2-NaBL2-DeclProperty :
    NaBL2-DeclProperty-Plhdr(_) -> [ H(
                                       [SOpt(HS(), "0")]
                                     , [S("$NaBL2-DeclProperty")]
                                     )
                                   ]

  is-NaBL2-NaBL2-DeclProperty =
    ?NaBL2-DeclProperty-Plhdr(_)


strategies
  prettyprint-NaBL2 =
    prettyprint-NaBL2-NaBL2-DeclPropertyId

  prettyprint-NaBL2(|sort):
    t -> <prettyprint-NaBL2-NaBL2-DeclPropertyId>
    where <?"NaBL2-DeclPropertyId"> sort

  prettyprint-NaBL2-NaBL2-DeclPropertyId =
    ![S(<is-string>)]

  prettyprint-NaBL2-NaBL2-DeclPropertyId :
    amb([h|hs]) -> <prettyprint-NaBL2-NaBL2-DeclPropertyId> h