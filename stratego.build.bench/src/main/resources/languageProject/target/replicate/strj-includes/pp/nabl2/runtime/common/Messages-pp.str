module pp/nabl2/runtime/common/Messages-pp

imports
  libstratego-gpp
  libspoofax/sdf/pp
  libspoofax/term/origin
  libstratego-sglr
  signatures/nabl2/runtime/common/Messages-sig


imports
  signatures/nabl2/shared/common/AST-sig
  signatures/nabl2/shared/common/CTerms-sig
  signatures/nabl2/shared/common/Messages-sig
  signatures/nabl2/runtime/common/Native-sig


imports
  pp/nabl2/shared/common/AST-pp
  pp/nabl2/shared/common/CTerms-pp
  pp/nabl2/shared/common/Messages-pp
  pp/nabl2/runtime/common/Native-pp


strategies
  prettyprint-example =
    prettyprint-NaBL2

  prettyprint-NaBL2 =
    fail

  prettyprint-NaBL2(|sort) =
    fail


strategies
  prettyprint-SDF-start-symbols =
    prettyprint-NaBL2-start-symbols

  prettyprint-NaBL2-start-symbols =
    fail


strategies
  prettyprint-NaBL2 =
    prettyprint-NaBL2-NaBL2-MessageContent

  prettyprint-NaBL2 =
    prettyprint-NaBL2-NaBL2-MessagePosition

  prettyprint-NaBL2(|sort):
    t -> <prettyprint-NaBL2-NaBL2-MessageContent>
    where <?"NaBL2-MessageContent"> sort

  prettyprint-NaBL2(|sort):
    t -> <prettyprint-NaBL2-NaBL2-MessagePosition>
    where <?"NaBL2-MessagePosition"> sort

  prettyprint-NaBL2-NaBL2-MessageContent :
    Formatted(t1__) -> [ H(
                           [SOpt(HS(), "0")]
                         , [t1__']
                         )
                       ]
    with t1__' := <pp-H-list(prettyprint-NaBL2-NaBL2-MessageContent|"")
                   <+ pp-one-Z(prettyprint-completion-aux)> t1__

  is-NaBL2-NaBL2-MessageContent =
    ?Formatted(_)

  NaBL2-get-indent :
    (t@Formatted(t1__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"NaBL2-MessageContent"> sort
    with switch !index
           case ?1 :
             indent := ""
           otherwise :
             indent := ""
         end

  NaBL2-get-separator :
    (t@Formatted(t1__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"NaBL2-MessageContent"> sort
    with switch !index
           case ?1 :
             separator := ""
           otherwise :
             separator := ""
         end

  NaBL2-get-leading-ws :
    (t@Formatted(t1__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"NaBL2-MessageContent"> sort
    with switch !index
           case ?1 :
             ws := ""
           otherwise :
             ws := ""
         end

  prettyprint-NaBL2-NaBL2-MessageContent :
    Text(t1__) -> [ H(
                      [SOpt(HS(), "0")]
                    , [t1__']
                    )
                  ]
    with t1__' := <pp-one-Z(prettyprint-NaBL2-NaBL2-String) <+ pp-one-Z(prettyprint-completion-aux)> t1__

  is-NaBL2-NaBL2-MessageContent =
    ?Text(_)

  NaBL2-get-indent :
    (t@Text(t1__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"NaBL2-MessageContent"> sort
    with switch !index
           case ?1 :
             indent := ""
           otherwise :
             indent := ""
         end

  NaBL2-get-separator :
    (t@Text(t1__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"NaBL2-MessageContent"> sort
    with switch !index
           case ?1 :
             separator := ""
           otherwise :
             separator := ""
         end

  NaBL2-get-leading-ws :
    (t@Text(t1__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"NaBL2-MessageContent"> sort
    with switch !index
           case ?1 :
             ws := ""
           otherwise :
             ws := ""
         end

  prettyprint-NaBL2-NaBL2-MessageContent :
    Term(t1__) -> [ H(
                      [SOpt(HS(), "0")]
                    , [t1__']
                    )
                  ]
    with t1__' := <pp-one-Z(prettyprint-NaBL2-NaBL2-CTerm) <+ pp-one-Z(prettyprint-completion-aux)> t1__

  is-NaBL2-NaBL2-MessageContent =
    ?Term(_)

  NaBL2-get-indent :
    (t@Term(t1__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"NaBL2-MessageContent"> sort
    with switch !index
           case ?1 :
             indent := ""
           otherwise :
             indent := ""
         end

  NaBL2-get-separator :
    (t@Term(t1__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"NaBL2-MessageContent"> sort
    with switch !index
           case ?1 :
             separator := ""
           otherwise :
             separator := ""
         end

  NaBL2-get-leading-ws :
    (t@Term(t1__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"NaBL2-MessageContent"> sort
    with switch !index
           case ?1 :
             ws := ""
           otherwise :
             ws := ""
         end

  prettyprint-NaBL2-NaBL2-MessageContent :
    Default() -> [ H(
                     [SOpt(HS(), "0")]
                   , [S("(default)")]
                   )
                 ]

  is-NaBL2-NaBL2-MessageContent =
    ?Default()

  NaBL2-get-indent :
    (t@Default(), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"NaBL2-MessageContent"> sort
    with switch !index
           otherwise :
             indent := ""
         end

  NaBL2-get-separator :
    (t@Default(), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"NaBL2-MessageContent"> sort
    with switch !index
           otherwise :
             separator := ""
         end

  NaBL2-get-leading-ws :
    (t@Default(), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"NaBL2-MessageContent"> sort
    with switch !index
           otherwise :
             ws := ""
         end

  prettyprint-NaBL2-NaBL2-MessagePosition :
    NoIndex() -> [ H(
                     [SOpt(HS(), "0")]
                   , [S(" @ -")]
                   )
                 ]

  is-NaBL2-NaBL2-MessagePosition =
    ?NoIndex()

  NaBL2-get-indent :
    (t@NoIndex(), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"NaBL2-MessagePosition"> sort
    with switch !index
           otherwise :
             indent := ""
         end

  NaBL2-get-separator :
    (t@NoIndex(), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"NaBL2-MessagePosition"> sort
    with switch !index
           otherwise :
             separator := ""
         end

  NaBL2-get-leading-ws :
    (t@NoIndex(), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"NaBL2-MessagePosition"> sort
    with switch !index
           otherwise :
             ws := ""
         end

  prettyprint-NaBL2-NaBL2-MessagePosition :
    NAME() -> [ H(
                  [SOpt(HS(), "0")]
                , [S(" @ NAMES")]
                )
              ]

  is-NaBL2-NaBL2-MessagePosition =
    ?NAME()

  NaBL2-get-indent :
    (t@NAME(), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"NaBL2-MessagePosition"> sort
    with switch !index
           otherwise :
             indent := ""
         end

  NaBL2-get-separator :
    (t@NAME(), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"NaBL2-MessagePosition"> sort
    with switch !index
           otherwise :
             separator := ""
         end

  NaBL2-get-leading-ws :
    (t@NAME(), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"NaBL2-MessagePosition"> sort
    with switch !index
           otherwise :
             ws := ""
         end

  prettyprint-NaBL2-NaBL2-MessagePosition :
    t1__ -> [ H(
                [SOpt(HS(), "0")]
              , [S(" "), t1__']
              )
            ]
    where not(is-NaBL2-NaBL2-MessagePosition)
    where t1__' := <pp-one-Z(prettyprint-NaBL2-NaBL2-TermIndex) <+ pp-one-Z(prettyprint-completion-aux)> t1__

  is-NaBL2-NaBL2-MessageContent =
    fail

  is-NaBL2-NaBL2-MessagePosition =
    fail

  prettyprint-NaBL2-NaBL2-MessageContent :
    amb([h|hs]) -> <prettyprint-NaBL2-NaBL2-MessageContent> h

  prettyprint-NaBL2-NaBL2-MessagePosition :
    amb([h|hs]) -> <prettyprint-NaBL2-NaBL2-MessagePosition> h

  prettyprint-NaBL2-NaBL2-String :
    NaBL2-String-Plhdr() -> [ H(
                                [SOpt(HS(), "0")]
                              , [S("$NaBL2-String")]
                              )
                            ]

  is-NaBL2-NaBL2-String =
    ?NaBL2-String-Plhdr()

  prettyprint-NaBL2-NaBL2-CTerm :
    NaBL2-CTerm-Plhdr() -> [ H(
                               [SOpt(HS(), "0")]
                             , [S("$NaBL2-CTerm")]
                             )
                           ]

  is-NaBL2-NaBL2-CTerm =
    ?NaBL2-CTerm-Plhdr()

  prettyprint-NaBL2-NaBL2-MessageContent :
    NaBL2-MessageContent-Plhdr() -> [ H(
                                        [SOpt(HS(), "0")]
                                      , [S("$NaBL2-MessageContent")]
                                      )
                                    ]

  is-NaBL2-NaBL2-MessageContent =
    ?NaBL2-MessageContent-Plhdr()

  prettyprint-NaBL2-NaBL2-MessagePosition :
    NaBL2-MessagePosition-Plhdr() -> [ H(
                                         [SOpt(HS(), "0")]
                                       , [S("$NaBL2-MessagePosition")]
                                       )
                                     ]

  is-NaBL2-NaBL2-MessagePosition =
    ?NaBL2-MessagePosition-Plhdr()

  prettyprint-NaBL2-NaBL2-TermIndex :
    NaBL2-TermIndex-Plhdr() -> [ H(
                                   [SOpt(HS(), "0")]
                                 , [S("$NaBL2-TermIndex")]
                                 )
                               ]

  is-NaBL2-NaBL2-TermIndex =
    ?NaBL2-TermIndex-Plhdr()

  prettyprint-NaBL2-NaBL2-String :
    NaBL2-String-Plhdr(_) -> [ H(
                                 [SOpt(HS(), "0")]
                               , [S("$NaBL2-String")]
                               )
                             ]

  is-NaBL2-NaBL2-String =
    ?NaBL2-String-Plhdr(_)

  prettyprint-NaBL2-NaBL2-CTerm :
    NaBL2-CTerm-Plhdr(_) -> [ H(
                                [SOpt(HS(), "0")]
                              , [S("$NaBL2-CTerm")]
                              )
                            ]

  is-NaBL2-NaBL2-CTerm =
    ?NaBL2-CTerm-Plhdr(_)

  prettyprint-NaBL2-NaBL2-MessageContent :
    NaBL2-MessageContent-Plhdr(_) -> [ H(
                                         [SOpt(HS(), "0")]
                                       , [S("$NaBL2-MessageContent")]
                                       )
                                     ]

  is-NaBL2-NaBL2-MessageContent =
    ?NaBL2-MessageContent-Plhdr(_)

  prettyprint-NaBL2-NaBL2-MessagePosition :
    NaBL2-MessagePosition-Plhdr(_) -> [ H(
                                          [SOpt(HS(), "0")]
                                        , [S("$NaBL2-MessagePosition")]
                                        )
                                      ]

  is-NaBL2-NaBL2-MessagePosition =
    ?NaBL2-MessagePosition-Plhdr(_)

  prettyprint-NaBL2-NaBL2-TermIndex :
    NaBL2-TermIndex-Plhdr(_) -> [ H(
                                    [SOpt(HS(), "0")]
                                  , [S("$NaBL2-TermIndex")]
                                  )
                                ]

  is-NaBL2-NaBL2-TermIndex =
    ?NaBL2-TermIndex-Plhdr(_)

  prettyprint-NaBL2-NaBL2-MessageContent :
    NaBL2-MessageContent-Opt-Plhdr() -> [ H(
                                            []
                                          , [S("")]
                                          )
                                        ]

  is-NaBL2-NaBL2-MessageContent =
    ?NaBL2-MessageContent-Opt-Plhdr()