module pp/nabl2/shared/constraints/Relations-pp

imports
  libstratego-gpp
  libspoofax/sdf/pp
  libspoofax/term/origin
  libstratego-sglr
  signatures/nabl2/shared/constraints/Relations-sig


imports
  signatures/nabl2/shared/common/CTerms-sig
  signatures/nabl2/shared/common/Identifiers-sig
  signatures/nabl2/shared/common/Messages-sig
  signatures/nabl2/shared/common/Relations-sig


imports
  pp/nabl2/shared/common/CTerms-pp
  pp/nabl2/shared/common/Identifiers-pp
  pp/nabl2/shared/common/Messages-pp
  pp/nabl2/shared/common/Relations-pp


strategies
  prettyprint-example =
    prettyprint-NaBL2

  prettyprint-NaBL2 =
    fail

  prettyprint-NaBL2(|sort) =
    fail


strategies
  prettyprint-SDF-start-symbols =
    prettyprint-NaBL2-start-symbols

  prettyprint-NaBL2-start-symbols =
    fail


strategies
  prettyprint-NaBL2 =
    prettyprint-NaBL2-NaBL2-Constraint

  prettyprint-NaBL2 =
    prettyprint-NaBL2-NaBL2-FunctionRef

  prettyprint-NaBL2(|sort):
    t -> <prettyprint-NaBL2-NaBL2-Constraint>
    where <?"NaBL2-Constraint"> sort

  prettyprint-NaBL2(|sort):
    t -> <prettyprint-NaBL2-NaBL2-FunctionRef>
    where <?"NaBL2-FunctionRef"> sort

  prettyprint-NaBL2-NaBL2-Constraint :
    CBuildRel(t1__, t2__, t3__, t4__) -> [ H(
                                             [SOpt(HS(), "0")]
                                           , [ t1__'
                                             , S(" ")
                                             , t2__'
                                             , S(" ")
                                             , t3__'
                                             , S(" ")
                                             , t4__'
                                             ]
                                           )
                                         ]
    with t1__' := <pp-one-Z(prettyprint-NaBL2-NaBL2-CTerm) <+ pp-one-Z(prettyprint-completion-aux)> t1__
    with t2__' := <pp-one-Z(prettyprint-NaBL2-NaBL2-RelationBuildOp) <+ pp-one-Z(prettyprint-completion-aux)> t2__
    with t3__' := <pp-one-Z(prettyprint-NaBL2-NaBL2-CTerm) <+ pp-one-Z(prettyprint-completion-aux)> t3__
    with t4__' := <pp-one-Z(prettyprint-NaBL2-NaBL2-Message) <+ pp-one-Z(prettyprint-completion-aux)> t4__

  is-NaBL2-NaBL2-Constraint =
    ?CBuildRel(_, _, _, _)

  NaBL2-get-indent :
    ( t@CBuildRel(t1__, t2__, t3__, t4__)
    , index
    ) -> indent
    where sort := <ia-get-sort> t
          ; <?"NaBL2-Constraint"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           case ?3 :
             indent := ""
           case ?4 :
             indent := ""
           otherwise :
             indent := ""
         end

  NaBL2-get-separator :
    ( t@CBuildRel(t1__, t2__, t3__, t4__)
    , index
    ) -> separator
    where sort := <ia-get-sort> t
          ; <?"NaBL2-Constraint"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           case ?3 :
             separator := ""
           case ?4 :
             separator := ""
           otherwise :
             separator := ""
         end

  NaBL2-get-leading-ws :
    ( t@CBuildRel(t1__, t2__, t3__, t4__)
    , index
    ) -> ws
    where sort := <ia-get-sort> t
          ; <?"NaBL2-Constraint"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := " "
           case ?3 :
             ws := " "
           case ?4 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-NaBL2-NaBL2-Constraint :
    CCheckRel(t1__, t2__, t3__, t4__) -> [ H(
                                             [SOpt(HS(), "0")]
                                           , [ t1__'
                                             , S(" ")
                                             , t2__'
                                             , S(" ")
                                             , t3__'
                                             , S(" ")
                                             , t4__'
                                             ]
                                           )
                                         ]
    with t1__' := <pp-one-Z(prettyprint-NaBL2-NaBL2-CTerm) <+ pp-one-Z(prettyprint-completion-aux)> t1__
    with t2__' := <pp-one-Z(prettyprint-NaBL2-NaBL2-RelationCheckOp) <+ pp-one-Z(prettyprint-completion-aux)> t2__
    with t3__' := <pp-one-Z(prettyprint-NaBL2-NaBL2-CTerm) <+ pp-one-Z(prettyprint-completion-aux)> t3__
    with t4__' := <pp-one-Z(prettyprint-NaBL2-NaBL2-Message) <+ pp-one-Z(prettyprint-completion-aux)> t4__

  is-NaBL2-NaBL2-Constraint =
    ?CCheckRel(_, _, _, _)

  NaBL2-get-indent :
    ( t@CCheckRel(t1__, t2__, t3__, t4__)
    , index
    ) -> indent
    where sort := <ia-get-sort> t
          ; <?"NaBL2-Constraint"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           case ?3 :
             indent := ""
           case ?4 :
             indent := ""
           otherwise :
             indent := ""
         end

  NaBL2-get-separator :
    ( t@CCheckRel(t1__, t2__, t3__, t4__)
    , index
    ) -> separator
    where sort := <ia-get-sort> t
          ; <?"NaBL2-Constraint"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           case ?3 :
             separator := ""
           case ?4 :
             separator := ""
           otherwise :
             separator := ""
         end

  NaBL2-get-leading-ws :
    ( t@CCheckRel(t1__, t2__, t3__, t4__)
    , index
    ) -> ws
    where sort := <ia-get-sort> t
          ; <?"NaBL2-Constraint"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := " "
           case ?3 :
             ws := " "
           case ?4 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-NaBL2-NaBL2-FunctionRef :
    t1__ -> [ H(
                [SOpt(HS(), "0")]
              , [t1__']
              )
            ]
    where not(is-NaBL2-NaBL2-FunctionRef)
    where t1__' := <pp-one-Z(prettyprint-NaBL2-NaBL2-RelationFunction) <+ pp-one-Z(prettyprint-completion-aux)> t1__

  is-NaBL2-NaBL2-Constraint =
    fail

  is-NaBL2-NaBL2-FunctionRef =
    fail

  prettyprint-NaBL2-NaBL2-Constraint :
    amb([h|hs]) -> <prettyprint-NaBL2-NaBL2-Constraint> h

  prettyprint-NaBL2-NaBL2-FunctionRef :
    amb([h|hs]) -> <prettyprint-NaBL2-NaBL2-FunctionRef> h

  prettyprint-NaBL2-NaBL2-RelationBuildOp :
    NaBL2-RelationBuildOp-Plhdr() -> [ H(
                                         [SOpt(HS(), "0")]
                                       , [S("$NaBL2-RelationBuildOp")]
                                       )
                                     ]

  is-NaBL2-NaBL2-RelationBuildOp =
    ?NaBL2-RelationBuildOp-Plhdr()

  prettyprint-NaBL2-NaBL2-Constraint :
    NaBL2-Constraint-Plhdr() -> [ H(
                                    [SOpt(HS(), "0")]
                                  , [S("$NaBL2-Constraint")]
                                  )
                                ]

  is-NaBL2-NaBL2-Constraint =
    ?NaBL2-Constraint-Plhdr()

  prettyprint-NaBL2-NaBL2-RelationCheckOp :
    NaBL2-RelationCheckOp-Plhdr() -> [ H(
                                         [SOpt(HS(), "0")]
                                       , [S("$NaBL2-RelationCheckOp")]
                                       )
                                     ]

  is-NaBL2-NaBL2-RelationCheckOp =
    ?NaBL2-RelationCheckOp-Plhdr()

  prettyprint-NaBL2-NaBL2-CTerm :
    NaBL2-CTerm-Plhdr() -> [ H(
                               [SOpt(HS(), "0")]
                             , [S("$NaBL2-CTerm")]
                             )
                           ]

  is-NaBL2-NaBL2-CTerm =
    ?NaBL2-CTerm-Plhdr()

  prettyprint-NaBL2-NaBL2-Message :
    NaBL2-Message-Plhdr() -> [ H(
                                 [SOpt(HS(), "0")]
                               , [S("$NaBL2-Message")]
                               )
                             ]

  is-NaBL2-NaBL2-Message =
    ?NaBL2-Message-Plhdr()

  prettyprint-NaBL2-NaBL2-FunctionRef :
    NaBL2-FunctionRef-Plhdr() -> [ H(
                                     [SOpt(HS(), "0")]
                                   , [S("$NaBL2-FunctionRef")]
                                   )
                                 ]

  is-NaBL2-NaBL2-FunctionRef =
    ?NaBL2-FunctionRef-Plhdr()

  prettyprint-NaBL2-NaBL2-RelationFunction :
    NaBL2-RelationFunction-Plhdr() -> [ H(
                                          [SOpt(HS(), "0")]
                                        , [S("$NaBL2-RelationFunction")]
                                        )
                                      ]

  is-NaBL2-NaBL2-RelationFunction =
    ?NaBL2-RelationFunction-Plhdr()

  prettyprint-NaBL2-NaBL2-RelationBuildOp :
    NaBL2-RelationBuildOp-Plhdr(_) -> [ H(
                                          [SOpt(HS(), "0")]
                                        , [S("$NaBL2-RelationBuildOp")]
                                        )
                                      ]

  is-NaBL2-NaBL2-RelationBuildOp =
    ?NaBL2-RelationBuildOp-Plhdr(_)

  prettyprint-NaBL2-NaBL2-Constraint :
    NaBL2-Constraint-Plhdr(_) -> [ H(
                                     [SOpt(HS(), "0")]
                                   , [S("$NaBL2-Constraint")]
                                   )
                                 ]

  is-NaBL2-NaBL2-Constraint =
    ?NaBL2-Constraint-Plhdr(_)

  prettyprint-NaBL2-NaBL2-RelationCheckOp :
    NaBL2-RelationCheckOp-Plhdr(_) -> [ H(
                                          [SOpt(HS(), "0")]
                                        , [S("$NaBL2-RelationCheckOp")]
                                        )
                                      ]

  is-NaBL2-NaBL2-RelationCheckOp =
    ?NaBL2-RelationCheckOp-Plhdr(_)

  prettyprint-NaBL2-NaBL2-CTerm :
    NaBL2-CTerm-Plhdr(_) -> [ H(
                                [SOpt(HS(), "0")]
                              , [S("$NaBL2-CTerm")]
                              )
                            ]

  is-NaBL2-NaBL2-CTerm =
    ?NaBL2-CTerm-Plhdr(_)

  prettyprint-NaBL2-NaBL2-Message :
    NaBL2-Message-Plhdr(_) -> [ H(
                                  [SOpt(HS(), "0")]
                                , [S("$NaBL2-Message")]
                                )
                              ]

  is-NaBL2-NaBL2-Message =
    ?NaBL2-Message-Plhdr(_)

  prettyprint-NaBL2-NaBL2-FunctionRef :
    NaBL2-FunctionRef-Plhdr(_) -> [ H(
                                      [SOpt(HS(), "0")]
                                    , [S("$NaBL2-FunctionRef")]
                                    )
                                  ]

  is-NaBL2-NaBL2-FunctionRef =
    ?NaBL2-FunctionRef-Plhdr(_)

  prettyprint-NaBL2-NaBL2-RelationFunction :
    NaBL2-RelationFunction-Plhdr(_) -> [ H(
                                           [SOpt(HS(), "0")]
                                         , [S("$NaBL2-RelationFunction")]
                                         )
                                       ]

  is-NaBL2-NaBL2-RelationFunction =
    ?NaBL2-RelationFunction-Plhdr(_)