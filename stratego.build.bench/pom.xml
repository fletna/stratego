<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>stratego.build.bench</artifactId>

  <parent>
    <groupId>org.metaborg</groupId>
    <artifactId>parent.java</artifactId>
    <version>2.6.0-SNAPSHOT</version>
    <relativePath>../../releng/parent/java</relativePath>
  </parent>

  <properties>
    <pie-version>0.5.3</pie-version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.metaborg</groupId>
      <artifactId>stratego.build</artifactId>
      <version>${metaborg-version}</version>
    </dependency>
    <dependency>
      <groupId>org.metaborg</groupId>
      <artifactId>org.metaborg.spoofax.core</artifactId>
      <version>${metaborg-version}</version>
    </dependency>
    <dependency>
      <groupId>org.metaborg</groupId>
      <artifactId>pie.store.lmdb</artifactId>
      <version>${pie-version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>jsr305</artifactId>
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <includes>
          <include>**/*</include>
        </includes>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <!-- Required to add a dependency on the Spoofax plugin, otherwise unpacking will fail with a class cast exception
          on archivers. Fix from: http://maven.40175.n5.nabble.com/Problems-with-register-new-archive-type-td4574906.html -->
        <dependencies>
          <dependency>
            <groupId>org.metaborg</groupId>
            <artifactId>spoofax-maven-plugin</artifactId>
            <version>${metaborg-version}</version>
          </dependency>
          <!-- Dependencies to languages to copy, to ensure they are built before this project. -->
          <dependency>
            <groupId>org.metaborg</groupId>
            <artifactId>org.metaborg.meta.lang.stratego</artifactId>
            <version>${metaborg-version}</version>
            <type>spoofax-language</type>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>unpack-stratego-language</id>
            <phase>compile</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.metaborg</groupId>
                  <artifactId>org.metaborg.meta.lang.stratego</artifactId>
                  <version>${metaborg-version}</version>
                  <type>spoofax-language</type>
                  <destFileName>stratego.spoofax-language</destFileName>
                </artifactItem>
              </artifactItems>
              <outputDirectory>${project.build.outputDirectory}/stratego.lang/</outputDirectory>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <overWriteReleases>true</overWriteReleases>
          <overWriteSnapshots>true</overWriteSnapshots>
        </configuration>
      </plugin>
      <!-- Create an executable JAR -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <finalName>${project.artifactId}</finalName>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>mb.stratego.build.bench.Main</mainClass>
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Testing if the code is runnable, and if the shaded JAR is runnable -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>test-executable</id>
            <phase>test</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>java</executable>
              <arguments>
                <argument>-classpath</argument>
                <classpath />
                <argument>mb.stratego.build.bench.Main</argument>
                <argument>-h</argument>
              </arguments>
              <outputFile>${null-device}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>test-shaded-jar-executable</id>
            <phase>verify</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>java</executable>
              <arguments>
                <argument>-jar</argument>
                <argument>${project.build.directory}/${project.artifactId}.jar</argument>
                <argument>-h</argument>
              </arguments>
              <outputFile>${null-device}</outputFile>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Skip installation of executable -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-install-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
