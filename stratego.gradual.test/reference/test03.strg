module test03

//imports collection/tuple/cons
signature
  constructors
    : ()
    : a -> (a)
    : a * b -> (a, b)
    : a * b * c -> (a, b, c)
    : a * b * c * d -> (a, b, c, d)
    : a * b * c * d * e -> (a, b, c, d, e)
    : a * b * c * d * e * f -> (a, b, c, d, e, f)
    : a * b * c * d * e * f * g -> (a, b, c, d, e, f, g)
    : a * b * c * d * e * f * g * h -> (a, b, c, d, e, f, g, h)
    : a * b * c * d * e * f * g * h * i -> (a, b, c, d, e, f, g, h, i)
    : a * b * c * d * e * f * g * h * i * j -> (a, b, c, d, e, f, g, h, i, j)
    : a * b * c * d * e * f * g * h * i * j * k -> (a, b, c, d, e, f, g, h, i, j, k)
    : a * b * c * d * e * f * g * h * i * j * k * l -> (a, b, c, d, e, f, g, h, i, j, k, l)
    : a * b * c * d * e * f * g * h * i * j * k * l * m -> (a, b, c, d, e, f, g, h, i, j, k, l, m)
    : a * b * c * d * e * f * g * h * i * j * k * l * m * n -> (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    : a * b * c * d * e * f * g * h * i * j * k * l * m * n * o -> (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    : a * b * c * d * e * f * g * h * i * j * k * l * m * n * o * p -> (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    : a * b * c * d * e * f * g * h * i * j * k * l * m * n * o * p * q -> (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    : a * b * c * d * e * f * g * h * i * j * k * l * m * n * o * p * q * r -> (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r)

overlays
 /**
  * Overlay for a pair, converts two terms to a 2-tuple.
  */
Pair(x, y) = (x, y)
// imports collection/list/cons
signature
  sorts List(a)
  constructors
  
    /**
     * Empty list.
     */
    Nil  : List(a)
    
    /** 
     * Element of a list.
     */
    Cons : a * List(a) -> List(a)
    
    /**
     * Concatenation of two lists.
     */
    Conc : List(a) * List(a) -> List(a)

signature
  sorts Call
  constructors
    Call  : a * List(a) -> Call

rules

  split(f, g) : x -> (<f> x, <g> x)

strategies

  main = 
    ?[prog | args];
    split(!Call(prog, args), id)
